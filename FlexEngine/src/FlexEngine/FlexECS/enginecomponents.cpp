// WLVERSE [https://wlverse.web.app]
// EngineComponents.cpp
//
// Just the refl register for the Audio component.
//
// AUTHORS
// [100%] Yew Chong (yewchong.k\@digipen.edu)
//   - Main Author
//
// Copyright (c) 2025 DigiPen, All rights reserved.

#pragma once

#include "EngineComponents.h"

namespace FlexEngine
{
  FLX_REFL_REGISTER_START(Position)
  FLX_REFL_REGISTER_PROPERTY(position)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Scale)
  FLX_REFL_REGISTER_PROPERTY(scale)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Rotation)
  FLX_REFL_REGISTER_PROPERTY(rotation)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Transform)
  FLX_REFL_REGISTER_PROPERTY(is_active)
  FLX_REFL_REGISTER_PROPERTY(transform)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(ZIndex)
  FLX_REFL_REGISTER_PROPERTY(z)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Parent)
  FLX_REFL_REGISTER_PROPERTY(parent)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Audio)
  FLX_REFL_REGISTER_PROPERTY(should_play)
  FLX_REFL_REGISTER_PROPERTY(is_looping)
  FLX_REFL_REGISTER_PROPERTY(audio_file)
  FLX_REFL_REGISTER_PROPERTY(change_mode)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Prefab)
    FLX_REFL_REGISTER_PROPERTY(prefab_name)
    FLX_REFL_REGISTER_END;
    
  FLX_REFL_REGISTER_START(Sprite)
  FLX_REFL_REGISTER_PROPERTY(model_matrix)
  FLX_REFL_REGISTER_PROPERTY(sprite_handle)
  FLX_REFL_REGISTER_PROPERTY(scale)
  FLX_REFL_REGISTER_PROPERTY(center_aligned)
  FLX_REFL_REGISTER_PROPERTY(opacity)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Animator)
  FLX_REFL_REGISTER_PROPERTY(spritesheet_handle)
  FLX_REFL_REGISTER_PROPERTY(default_spritesheet_handle)
  FLX_REFL_REGISTER_PROPERTY(should_play)
  FLX_REFL_REGISTER_PROPERTY(is_looping)
  FLX_REFL_REGISTER_PROPERTY(return_to_default)
  FLX_REFL_REGISTER_PROPERTY(frame_time)
  FLX_REFL_REGISTER_PROPERTY(total_frames)
  FLX_REFL_REGISTER_PROPERTY(current_frame)
  FLX_REFL_REGISTER_PROPERTY(current_frame_time)
  FLX_REFL_REGISTER_END;


  FLX_REFL_REGISTER_START(ParticleSystem)
      FLX_REFL_REGISTER_PROPERTY(max_particles)
      FLX_REFL_REGISTER_PROPERTY(particlesprite_handle)
      FLX_REFL_REGISTER_PROPERTY(duration)
      FLX_REFL_REGISTER_PROPERTY(is_looping)
      FLX_REFL_REGISTER_PROPERTY(start_delay)
      FLX_REFL_REGISTER_PROPERTY(lifetime)
      FLX_REFL_REGISTER_PROPERTY(start_speed)
      FLX_REFL_REGISTER_PROPERTY(end_speed)
      FLX_REFL_REGISTER_PROPERTY(start_size)
      FLX_REFL_REGISTER_PROPERTY(end_size)
      FLX_REFL_REGISTER_PROPERTY(start_color)
      FLX_REFL_REGISTER_PROPERTY(end_color)
      FLX_REFL_REGISTER_PROPERTY(simulation_speed)
      FLX_REFL_REGISTER_PROPERTY(particleEmissionRate)
      FLX_REFL_REGISTER_PROPERTY(particleEmissionShapeIndex)
      FLX_REFL_REGISTER_PROPERTY(is_collidable)
      FLX_REFL_REGISTER_PROPERTY(is_static)
      FLX_REFL_REGISTER_PROPERTY(emissionAccumulator)
      FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(ParticleSystem::ParticleEmitRate)
      FLX_REFL_REGISTER_PROPERTY(rate_over_time)
      FLX_REFL_REGISTER_PROPERTY(rate_over_distance)
      FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(ParticleSystem::Particle)
      FLX_REFL_REGISTER_PROPERTY(currentLifetime)
      FLX_REFL_REGISTER_PROPERTY(totalLifetime)
      FLX_REFL_REGISTER_PROPERTY(currentSpeed)
      FLX_REFL_REGISTER_PROPERTY(currentSize)
      FLX_REFL_REGISTER_PROPERTY(currentColor)
      FLX_REFL_REGISTER_PROPERTY(start_speed)
      FLX_REFL_REGISTER_PROPERTY(end_speed)
      FLX_REFL_REGISTER_PROPERTY(start_size)
      FLX_REFL_REGISTER_PROPERTY(end_size)
      FLX_REFL_REGISTER_PROPERTY(start_color)
      FLX_REFL_REGISTER_PROPERTY(end_color)
      FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Camera)
    FLX_REFL_REGISTER_PROPERTY(is_active)
    FLX_REFL_REGISTER_PROPERTY(m_ortho_matrix)
    FLX_REFL_REGISTER_PROPERTY(m_perspective_matrix)
    FLX_REFL_REGISTER_PROPERTY(m_view_matrix)
    FLX_REFL_REGISTER_PROPERTY(m_proj_view_matrix)
    FLX_REFL_REGISTER_PROPERTY(m_ortho_width)
    FLX_REFL_REGISTER_PROPERTY(m_ortho_height)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Text)
  FLX_REFL_REGISTER_PROPERTY(fonttype)
  FLX_REFL_REGISTER_PROPERTY(text)
  FLX_REFL_REGISTER_PROPERTY(color)
  FLX_REFL_REGISTER_PROPERTY(alignment)
  FLX_REFL_REGISTER_PROPERTY(textboxDimensions)
  FLX_REFL_REGISTER_END;

  // physics
  FLX_REFL_REGISTER_START(BoundingBox2D)
  FLX_REFL_REGISTER_PROPERTY(size)
  FLX_REFL_REGISTER_PROPERTY(min)
  FLX_REFL_REGISTER_PROPERTY(max)
  FLX_REFL_REGISTER_PROPERTY(is_colliding)
  FLX_REFL_REGISTER_PROPERTY(is_mouse_over)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(AABB)
  FLX_REFL_REGISTER_PROPERTY(min)
  FLX_REFL_REGISTER_PROPERTY(max)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Rigidbody)
  FLX_REFL_REGISTER_PROPERTY(velocity)
  FLX_REFL_REGISTER_PROPERTY(is_static)
  FLX_REFL_REGISTER_END;

  // scripting
  FLX_REFL_REGISTER_START(Script)
  FLX_REFL_REGISTER_PROPERTY(script_name)
  FLX_REFL_REGISTER_END;

  // button
  FLX_REFL_REGISTER_START(Button)
  FLX_REFL_REGISTER_END;

  // Gameplay
  FLX_REFL_REGISTER_START(Character)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Drifter)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Enemy)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Healthbar)
  FLX_REFL_REGISTER_PROPERTY(original_scale)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(MoveUI)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Slider)
  FLX_REFL_REGISTER_PROPERTY(min_position)
  FLX_REFL_REGISTER_PROPERTY(max_position)
  FLX_REFL_REGISTER_PROPERTY(slider_length)
  FLX_REFL_REGISTER_PROPERTY(original_value)
  FLX_REFL_REGISTER_PROPERTY(original_scale)
  FLX_REFL_REGISTER_PROPERTY(original_pos)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(SettingsUI)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(CreditsUI)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(PauseUI)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(PauseHoverUI)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(CharacterSlot)
  FLX_REFL_REGISTER_PROPERTY(slot_number)
  FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(HealthbarSlot)
  FLX_REFL_REGISTER_PROPERTY(slot_number)
  FLX_REFL_REGISTER_END;
  
  FLX_REFL_REGISTER_START(SpeedBarSlot)
  FLX_REFL_REGISTER_PROPERTY(slot_number)
  FLX_REFL_REGISTER_PROPERTY(character)
  FLX_REFL_REGISTER_END;


  FLX_REFL_REGISTER_START(SpeedBarSlotTarget)
  FLX_REFL_REGISTER_PROPERTY(slot_number)
  FLX_REFL_REGISTER_END;

  // Script-Component Pairs

  FLX_REFL_REGISTER_START(MoveOneComponent)
  FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(MoveTwoComponent)
  FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(MoveThreeComponent)
  FLX_REFL_REGISTER_END;

  // Registration for PostProcessingMarker
  FLX_REFL_REGISTER_START(PostProcessingMarker)
      FLX_REFL_REGISTER_PROPERTY(enableGaussianBlur)
      FLX_REFL_REGISTER_PROPERTY(enableChromaticAberration)
      FLX_REFL_REGISTER_PROPERTY(enableBloom)
      FLX_REFL_REGISTER_PROPERTY(enableVignette)
      FLX_REFL_REGISTER_PROPERTY(enableColorGrading)
      FLX_REFL_REGISTER_PROPERTY(enableFilmGrain)
      FLX_REFL_REGISTER_PROPERTY(enablePixelate)
      FLX_REFL_REGISTER_PROPERTY(enableWarp)
      FLX_REFL_REGISTER_PROPERTY(globalIntensity)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingGaussianBlur
  FLX_REFL_REGISTER_START(PostProcessingGaussianBlur)
      FLX_REFL_REGISTER_PROPERTY(intensity)
      FLX_REFL_REGISTER_PROPERTY(distance)
      FLX_REFL_REGISTER_PROPERTY(blurPasses)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingChromaticAbberation
  FLX_REFL_REGISTER_START(PostProcessingChromaticAbberation)
      FLX_REFL_REGISTER_PROPERTY(intensity)
      FLX_REFL_REGISTER_PROPERTY(redOffset)
      FLX_REFL_REGISTER_PROPERTY(greenOffset)
      FLX_REFL_REGISTER_PROPERTY(blueOffset)
      FLX_REFL_REGISTER_PROPERTY(edgeRadius)
      FLX_REFL_REGISTER_PROPERTY(edgeSoftness)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingBloom
  FLX_REFL_REGISTER_START(PostProcessingBloom)
      FLX_REFL_REGISTER_PROPERTY(threshold)
      FLX_REFL_REGISTER_PROPERTY(intensity)
      FLX_REFL_REGISTER_PROPERTY(radius)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingVignette
  FLX_REFL_REGISTER_START(PostProcessingVignette)
      FLX_REFL_REGISTER_PROPERTY(intensity)
      FLX_REFL_REGISTER_PROPERTY(radius)
      FLX_REFL_REGISTER_PROPERTY(softness)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingColorGrading
  FLX_REFL_REGISTER_START(PostProcessingColorGrading)
      FLX_REFL_REGISTER_PROPERTY(brightness)
      FLX_REFL_REGISTER_PROPERTY(contrast)
      FLX_REFL_REGISTER_PROPERTY(saturation)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingPixelate
  FLX_REFL_REGISTER_START(PostProcessingPixelate)
      FLX_REFL_REGISTER_PROPERTY(pixelWidth)
      FLX_REFL_REGISTER_PROPERTY(pixelHeight)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingFilmGrain
  FLX_REFL_REGISTER_START(PostProcessingFilmGrain)
      FLX_REFL_REGISTER_PROPERTY(grainIntensity)
      FLX_REFL_REGISTER_PROPERTY(grainSize)
      FLX_REFL_REGISTER_PROPERTY(animateGrain)
      FLX_REFL_REGISTER_END;

  // Registration for PostProcessingWarp
  FLX_REFL_REGISTER_START(PostProcessingWarp)
      FLX_REFL_REGISTER_PROPERTY(warpStrength)
      FLX_REFL_REGISTER_PROPERTY(warpRadius)
      FLX_REFL_REGISTER_END;
} // namespace FlexEngine
