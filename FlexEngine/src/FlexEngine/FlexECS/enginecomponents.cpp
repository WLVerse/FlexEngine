// WLVERSE [https://wlverse.web.app]
// EngineComponents.cpp
// 
// Just the refl register for the Audio component.
//
// AUTHORS
// [100%] Yew Chong (yewchong.k\@digipen.edu)
//   - Main Author
// 
// Copyright (c) 2024 DigiPen, All rights reserved.

#pragma once

#include "EngineComponents.h"


namespace FlexEngine
{
  FLX_REFL_REGISTER_START(Position)
    FLX_REFL_REGISTER_PROPERTY(position)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Scale)
    FLX_REFL_REGISTER_PROPERTY(scale)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Rotation)
    FLX_REFL_REGISTER_PROPERTY(rotation)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Transform)
    FLX_REFL_REGISTER_PROPERTY(is_dirty)
    FLX_REFL_REGISTER_PROPERTY(is_active)
    FLX_REFL_REGISTER_PROPERTY(transform)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(ZIndex)
    FLX_REFL_REGISTER_PROPERTY(z)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Parent)
    FLX_REFL_REGISTER_PROPERTY(parent)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Audio)
    FLX_REFL_REGISTER_PROPERTY(should_play)
    FLX_REFL_REGISTER_PROPERTY(is_looping)
    FLX_REFL_REGISTER_PROPERTY(audio_file) 
    FLX_REFL_REGISTER_PROPERTY(change_mode)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Sprite)
    FLX_REFL_REGISTER_PROPERTY(sprite_handle)
    FLX_REFL_REGISTER_PROPERTY(handle)
    FLX_REFL_REGISTER_PROPERTY(center_aligned)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Animator)
    FLX_REFL_REGISTER_PROPERTY(spritesheet_file)
    FLX_REFL_REGISTER_PROPERTY(should_play)
    FLX_REFL_REGISTER_PROPERTY(time)
    FLX_REFL_REGISTER_END;


  FLX_REFL_REGISTER_START(ParticleSystem)
      FLX_REFL_REGISTER_PROPERTY(max_particles)
      FLX_REFL_REGISTER_PROPERTY(particlesprite_handle)
      FLX_REFL_REGISTER_PROPERTY(duration)
      FLX_REFL_REGISTER_PROPERTY(is_looping)
      FLX_REFL_REGISTER_PROPERTY(start_delay)
      FLX_REFL_REGISTER_PROPERTY(lifetime)
      FLX_REFL_REGISTER_PROPERTY(start_speed)
      FLX_REFL_REGISTER_PROPERTY(end_speed)
      FLX_REFL_REGISTER_PROPERTY(start_size)
      FLX_REFL_REGISTER_PROPERTY(end_size)
      FLX_REFL_REGISTER_PROPERTY(start_color)
      FLX_REFL_REGISTER_PROPERTY(end_color)
      FLX_REFL_REGISTER_PROPERTY(simulation_speed)
      FLX_REFL_REGISTER_PROPERTY(particleEmissionRate)
      FLX_REFL_REGISTER_PROPERTY(particleEmissionShapeIndex)
      FLX_REFL_REGISTER_PROPERTY(is_collidable)
      FLX_REFL_REGISTER_PROPERTY(is_static)
      FLX_REFL_REGISTER_PROPERTY(emissionAccumulator)
      FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(ParticleSystem::ParticleEmitRate)
      FLX_REFL_REGISTER_PROPERTY(rate_over_time)
      FLX_REFL_REGISTER_PROPERTY(rate_over_distance)
      FLX_REFL_REGISTER_END;
  FLX_REFL_REGISTER_START(ParticleSystem::Particle)
      FLX_REFL_REGISTER_PROPERTY(currentLifetime)
      FLX_REFL_REGISTER_PROPERTY(totalLifetime)
      FLX_REFL_REGISTER_PROPERTY(currentSpeed)
      FLX_REFL_REGISTER_PROPERTY(currentSize)
      FLX_REFL_REGISTER_PROPERTY(currentColor)
      FLX_REFL_REGISTER_PROPERTY(start_speed)
      FLX_REFL_REGISTER_PROPERTY(end_speed)
      FLX_REFL_REGISTER_PROPERTY(start_size)
      FLX_REFL_REGISTER_PROPERTY(end_size)
      FLX_REFL_REGISTER_PROPERTY(start_color)
      FLX_REFL_REGISTER_PROPERTY(end_color)
      FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Camera)
      FLX_REFL_REGISTER_PROPERTY(m_data)
      FLX_REFL_REGISTER_PROPERTY(is_active)
      FLX_REFL_REGISTER_PROPERTY(m_ortho_matrix)
      FLX_REFL_REGISTER_PROPERTY(m_perspective_matrix)
      FLX_REFL_REGISTER_PROPERTY(m_view_matrix)
      FLX_REFL_REGISTER_PROPERTY(m_proj_view_matrix)
   FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(CameraData)
      FLX_REFL_REGISTER_PROPERTY(position)
      FLX_REFL_REGISTER_PROPERTY(target)
      FLX_REFL_REGISTER_PROPERTY(up)
      FLX_REFL_REGISTER_PROPERTY(right)
      FLX_REFL_REGISTER_PROPERTY(fieldOfView)
      FLX_REFL_REGISTER_PROPERTY(aspectRatio)
      FLX_REFL_REGISTER_PROPERTY(nearClip)
      FLX_REFL_REGISTER_PROPERTY(farClip)
      FLX_REFL_REGISTER_PROPERTY(m_isOrthographic)
      FLX_REFL_REGISTER_PROPERTY(m_OrthoWidth)
      FLX_REFL_REGISTER_PROPERTY(m_OrthoHeight)
   FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Text)
      FLX_REFL_REGISTER_PROPERTY(fonttype)
      FLX_REFL_REGISTER_PROPERTY(text)
      FLX_REFL_REGISTER_PROPERTY(color)
      FLX_REFL_REGISTER_PROPERTY(alignment)
      FLX_REFL_REGISTER_PROPERTY(textboxDimensions)
   FLX_REFL_REGISTER_END;

  //physics
  FLX_REFL_REGISTER_START(BoundingBox2D)
    FLX_REFL_REGISTER_PROPERTY(size)
    FLX_REFL_REGISTER_PROPERTY(min)
    FLX_REFL_REGISTER_PROPERTY(max)
    FLX_REFL_REGISTER_PROPERTY(is_colliding)
    FLX_REFL_REGISTER_PROPERTY(is_mouse_over)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(AABB)
    FLX_REFL_REGISTER_PROPERTY(min)
    FLX_REFL_REGISTER_PROPERTY(max)
    FLX_REFL_REGISTER_END;

  FLX_REFL_REGISTER_START(Rigidbody)
    FLX_REFL_REGISTER_PROPERTY(velocity)
    FLX_REFL_REGISTER_PROPERTY(is_static)
    FLX_REFL_REGISTER_END;

  //scripting
  FLX_REFL_REGISTER_START(Script)
    FLX_REFL_REGISTER_PROPERTY(script_name)
    FLX_REFL_REGISTER_END;

  // button
  FLX_REFL_REGISTER_START(Button)
    FLX_REFL_REGISTER_END;

}