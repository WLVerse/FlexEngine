#include "editorcomponents.h"
#include "componentviewer.h"

namespace Editor
{
  COMPONENT_VIEWER_START(Position)
    COMPONENT_VIEWER_DRAG_VECTOR3(position)
    COMPONENT_VIEWER_END(Position)

  COMPONENT_VIEWER_START(Rotation)
    COMPONENT_VIEWER_DRAG_VECTOR3(rotation)
    COMPONENT_VIEWER_END(Rotation)

  COMPONENT_VIEWER_START(Scale)
    COMPONENT_VIEWER_DRAG_VECTOR3(scale)
    COMPONENT_VIEWER_END(Scale)

  COMPONENT_VIEWER_START(Transform)
    COMPONENT_VIEWER_BOOL(is_dirty)
    COMPONENT_VIEWER_MAT44(transform)
    COMPONENT_VIEWER_END(Transform)

  COMPONENT_VIEWER_START(ZIndex)
    COMPONENT_VIEWER_DRAG_INT(z)
    COMPONENT_VIEWER_END(ZIndex)
  
  COMPONENT_VIEWER_START(Parent)
    COMPONENT_VIEWER_ENTITY_REFERENCE(parent)
    COMPONENT_VIEWER_END(Parent)

  COMPONENT_VIEWER_START(Audio)
    COMPONENT_VIEWER_BOOL(should_play)
    COMPONENT_VIEWER_BOOL(is_looping);
    COMPONENT_VIEWER_AUDIO_PATH(audio_file);
    COMPONENT_VIEWER_END(Audio)
  
  COMPONENT_VIEWER_START(Sprite)
    COMPONENT_VIEWER_TEXTURE_PATH(sprite_handle)
    COMPONENT_VIEWER_DRAG_INT(handle)
    COMPONENT_VIEWER_END(Sprite)

  COMPONENT_VIEWER_START(Animator)
    COMPONENT_VIEWER_SPRITESHEET_PATH(spritesheet_file)   //This may be wrong. Might need to need to make filepath to spritesheet
    COMPONENT_VIEWER_BOOL(should_play)
    COMPONENT_VIEWER_DRAG_FLOAT(time)
    COMPONENT_VIEWER_END(Animator)

  /**************
  * Physics
  **************/
  COMPONENT_VIEWER_START(BoundingBox2D)
    COMPONENT_VIEWER_DRAG_VECTOR2(min)
    COMPONENT_VIEWER_DRAG_VECTOR2(max)
    COMPONENT_VIEWER_BOOL(is_colliding)
    COMPONENT_VIEWER_END(BoundingBox2D)

  COMPONENT_VIEWER_START(Rigidbody)
    COMPONENT_VIEWER_DRAG_VECTOR2(velocity)
    COMPONENT_VIEWER_BOOL(is_static)
    COMPONENT_VIEWER_END(Rigidbody)


  /**************
  * Scripting
  **************/
  COMPONENT_VIEWER_START(Script)
    COMPONENT_VIEWER_EDITABLE_STRING(script_name)
    COMPONENT_VIEWER_END(Script)
    
    
  void RegisterComponents()
  {
    REGISTER_COMPONENT_VIEWER(Position);
    REGISTER_COMPONENT_VIEWER(Rotation);
    REGISTER_COMPONENT_VIEWER(Scale);
    REGISTER_COMPONENT_VIEWER_FUNCTIONS(Transform, COMPONENT_ENABLE_ADD, COMPONENT_DISABLE_REMOVE);
    REGISTER_COMPONENT_VIEWER(ZIndex);
    REGISTER_COMPONENT_VIEWER(Parent);
    REGISTER_COMPONENT_VIEWER(Audio);
    REGISTER_COMPONENT_VIEWER(Sprite);
    REGISTER_COMPONENT_VIEWER(Animator);

    REGISTER_COMPONENT_VIEWER(BoundingBox2D);
    REGISTER_COMPONENT_VIEWER(Rigidbody);

    REGISTER_COMPONENT_VIEWER(Script);
  }
}